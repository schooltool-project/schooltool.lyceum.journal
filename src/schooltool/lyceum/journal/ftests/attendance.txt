Functional doctest for SchoolTool Journal Attendance
====================================================

Let's log in with the manager account:

    >>> from zope.testbrowser.testing import Browser
    >>> from schooltool.lyceum.journal.ftests import printGradebookTable
    >>> manager = Browser()
    >>> manager.addHeader('Authorization', 'Basic manager:schooltool')
    >>> manager.handleErrors = False
    >>> manager.open('http://localhost/')

Add some teachers:

    >>> from schooltool.basicperson.browser.ftests.setup import addPerson
    >>> addPerson('Pete', 'Teacher', username='pete', password='pwd', groups=['teachers'])

A class:

    >>> manager.getLink('Manage').click()
    >>> manager.getLink('Groups').click()
    >>> manager.getLink('New Group').click()
    >>> manager.getControl('Title').value = "2a"
    >>> manager.getControl('Add').click()

And some students:

    >>> addPerson('Frum', 'Student', username='frum', password='pwd', groups=['students', '2a'])
    >>> addPerson('Grum', 'Student', username='grum', password='pwd', groups=['students', '2a'])

Add a term:

    >>> manager.getLink('Manage').click()
    >>> manager.getLink('Terms').click()
    >>> manager.getLink('New Term').click()
    >>> manager.getControl('Title').value = '2005 Fall 1'
    >>> manager.getControl('Start date').value = '2005-09-01'
    >>> manager.getControl('End date').value = '2005-10-31'
    >>> manager.getControl('Next').click()
    >>> manager.getControl('Saturday').click()
    >>> manager.getControl('Sunday').click()
    >>> manager.getControl('Add term').click()

Timetable schema:

    >>> manager.getLink('Manage').click()
    >>> manager.getLink('School Timetables').click()
    >>> manager.getLink('New Timetable').click()
    >>> manager.getLink('simple weekly timetable schema').click()

    >>> manager.getControl(name='field.period_name_1').value = 'A'
    >>> manager.getControl(name='field.period_start_1').value = '9:00'
    >>> manager.getControl(name='field.period_finish_1').value = '10:00'

    >>> manager.getControl(name='field.period_name_2').value = 'B'
    >>> manager.getControl(name='field.period_start_2').value = '10:30'
    >>> manager.getControl(name='field.period_finish_2').value = '11:30'

    >>> manager.getControl('Create').click()

A couple of sections:

    >>> from schooltool.app.browser.ftests.setup import addSection
    >>> from schooltool.app.browser.ftests.setup import addCourse
    >>> addCourse("History")

    >>> addSection("History", title="History (1a)",
    ...            instructors=['Pete'],
    ...            members=['Grum', 'Frum'])

    >>> addSection("History", title="History (1a)",
    ...            instructors=['Pete'],
    ...            members=['Grum', 'Frum'])

Let's schedule the sections:

    >>> manager.getLink('Manage').click()
    >>> manager.getLink('Sections').click()
    >>> manager.getLink(url='sections/1').click()
    >>> manager.getLink('View Timetables').click()
    >>> manager.getLink('Add Timetable').click()
    >>> manager.getControl(name='terms').value = ['2005-fall-1']
    >>> manager.getControl('Add').click()
    >>> manager.getLink('2005-fall-1.default').click()
    >>> manager.getLink('Edit').click()
    >>> manager.getControl(name='Tuesday.A').value = True
    >>> manager.getControl(name='Tuesday.B').value = True
    >>> manager.getControl(name='Wednesday.A').value = True
    >>> manager.getControl('Save').click()

Let's log in with the teacher account:

    >>> teacher = Browser()
    >>> teacher.handleErrors = False
    >>> teacher.open('http://localhost/')
    >>> teacher.getLink('Log In').click()
    >>> teacher.getControl('Username').value = 'pete'
    >>> teacher.getControl('Password').value = 'pwd'
    >>> teacher.getControl('Log in').click()

Let's mark Frum as if he has skipped some lessons:

    >>> teacher.open('http://localhost/persons/frum/calendar/2005-09-06')
    >>> teacher.getLink('Journal').click()
    >>> teacher.getLink('Frum').click()
    >>> printGradebookTable(teacher.contents)
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+
    | Nr. | First Name | Last Name | 06      | 06      | 07      | 13      | 13      | 14      | 20      | 20      | 21      | 27      | 27      | 28      | Average | Absences |
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+
    | 1   | Frum       | Student   | [_____] | [_____] | [_____] | [_____] | [_____] | [_____] | [_____] | [_____] | [_____] | [_____] | [_____] | [_____] |         |          |
    | 2   | Grum       | Student   | [_____] |         |         |         |         |         |         |         |         |         |         |         |         |          |
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+

    >>> cells = analyze.queryHTML('//table[@class="data"]//input[@type="text"]/@name', teacher.contents)
    >>> for i in range(8):
    ...     teacher.getControl(name=cells[i]).value = 'n'
    >>> teacher.getControl('Update').click()
    >>> printGradebookTable(teacher.contents)
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+
    | Nr. | First Name | Last Name | 06      | 06      | 07      | 13      | 13      | 14      | 20      | 20      | 21      | 27      | 27      | 28      | Average | Absences |
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+
    | 1   | Frum       | Student   | [n____] | [n____] | [n____] | [n____] | [n____] | [n____] | [n____] | [n____] | [_____] | [_____] | [_____] | [_____] |         | 8        |
    | 2   | Grum       | Student   | [_____] |         |         |         |         |         |         |         |         |         |         |         |         |          |
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+

    >>> teacher.getLink('07').click()
    >>> printGradebookTable(teacher.contents)
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+
    | Nr. | First Name | Last Name | 06      | 06      | 07      | 13      | 13      | 14      | 20      | 20      | 21      | 27      | 27      | 28      | Average | Absences |
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+
    | 1   | Frum       | Student   | [n____] | [n____] | [n____] | [n____] | [n____] | [n____] | [n____] | [n____] | [_____] | [_____] | [_____] | [_____] |         | 8        |
    | 2   | Grum       | Student   |         |         | [_____] |         |         |         |         |         |         |         |         |         |         |          |
    +-----+------------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+

    >>> manager.open('http://localhost/groups/2a/attendance.html')
    >>> manager.getLink('September').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+----+----+----+----+----+----+----+----+-------+
    | First Name | Last Name | 06 | 07 | 13 | 14 | 20 | 21 | 27 | 28 | Total |
    +------------+-----------+----+----+----+----+----+----+----+----+-------+
    | Frum       | Student   | 2  | 1  | 2  | 1  | 2  |    |    |    | 8     |
    | Grum       | Student   |    |    |    |    |    |    |    |    |       |
    +------------+-----------+----+----+----+----+----+----+----+----+-------+

    >>> manager.getLink('Frum').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | First Name | Last Name | 06  | 07  | 13  | 14  | 20  | 21 | 27 | 28 | Total |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | Frum       | Student   | 2   | 1   | 2   | 1   | 2   |    |    |    | 8     |
    | Explained: |           | [ ] | [ ] | [ ] | [ ] | [ ] |    |    |    |       |
    | Grum       | Student   |     |     |     |     |     |    |    |    |       |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+

    >>> cells = analyze.queryHTML('//table[@class="data"]//input[@type="checkbox"]/@name', manager.contents)
    >>> manager.getControl(name=cells[0]).value = ["checked"]
    >>> manager.getControl(name=cells[2]).value = ["checked"]
    >>> manager.getControl('Update').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | First Name | Last Name | 06  | 07  | 13  | 14  | 20  | 21 | 27 | 28 | Total |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | Frum       | Student   | 2   | 1   | 2   | 1   | 2   |    |    |    | 8     |
    | Explained: |           | [V] | [ ] | [V] | [ ] | [ ] |    |    |    |       |
    | Grum       | Student   |     |     |     |     |     |    |    |    |       |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+

    >>> manager.getLink('13').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+
    | First Name | Last Name | A   | B   |
    +------------+-----------+-----+-----+
    | Frum       | Student   | n   | n   |
    | Explained: |           | [V] | [V] |
    | Grum       | Student   |     |     |
    +------------+-----------+-----+-----+

    >>> cells = analyze.queryHTML('//table[@class="data"]//input[@type="checkbox"]/@name', manager.contents)
    >>> manager.getControl(name=cells[1]).value = ["checked"]
    >>> manager.getControl('Update').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+
    | First Name | Last Name | A   | B   |
    +------------+-----------+-----+-----+
    | Frum       | Student   | n   | n   |
    | Explained: |           | [V] | [V] |
    | Grum       | Student   |     |     |
    +------------+-----------+-----+-----+

    >>> manager.getLink('Show the whole month').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | First Name | Last Name | 06  | 07  | 13  | 14  | 20  | 21 | 27 | 28 | Total |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | Frum       | Student   | 2   | 1   | 2   | 1   | 2   |    |    |    | 8     |
    | Explained: |           | [V] | [ ] | [V] | [ ] | [ ] |    |    |    |       |
    | Grum       | Student   |     |     |     |     |     |    |    |    |       |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+

    >>> cells = analyze.queryHTML('//table[@class="data"]//input[@type="checkbox"]/@name', manager.contents)
    >>> manager.getControl(name=cells[0]).value = []
    >>> manager.getControl('Update').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | First Name | Last Name | 06  | 07  | 13  | 14  | 20  | 21 | 27 | 28 | Total |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | Frum       | Student   | 2   | 1   | 2   | 1   | 2   |    |    |    | 8     |
    | Explained: |           | [ ] | [ ] | [V] | [ ] | [ ] |    |    |    |       |
    | Grum       | Student   |     |     |     |     |     |    |    |    |       |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+

    >>> manager.getLink('13').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+
    | First Name | Last Name | A   | B   |
    +------------+-----------+-----+-----+
    | Frum       | Student   | n   | n   |
    | Explained: |           | [V] | [V] |
    | Grum       | Student   |     |     |
    +------------+-----------+-----+-----+

    >>> cells = analyze.queryHTML('//table[@class="data"]//input[@type="checkbox"]/@name', manager.contents)
    >>> manager.getControl(name=cells[0]).value = ["checked"]
    >>> manager.getControl(name=cells[1]).value = []
    >>> manager.getControl('Update').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+
    | First Name | Last Name | A   | B   |
    +------------+-----------+-----+-----+
    | Frum       | Student   | n   | n   |
    | Explained: |           | [V] | [ ] |
    | Grum       | Student   |     |     |
    +------------+-----------+-----+-----+

    >>> cells = analyze.queryHTML('//table[@class="data"]//input[@type="checkbox"]/@name', manager.contents)
    >>> manager.getControl(name=cells[1]).value = ["checked"]
    >>> manager.getControl('Update').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+
    | First Name | Last Name | A   | B   |
    +------------+-----------+-----+-----+
    | Frum       | Student   | n   | n   |
    | Explained: |           | [V] | [V] |
    | Grum       | Student   |     |     |
    +------------+-----------+-----+-----+

    >>> manager.getLink('Show the whole month').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | First Name | Last Name | 06  | 07  | 13  | 14  | 20  | 21 | 27 | 28 | Total |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+
    | Frum       | Student   | 2   | 1   | 2   | 1   | 2   |    |    |    | 8     |
    | Explained: |           | [ ] | [ ] | [V] | [ ] | [ ] |    |    |    |       |
    | Grum       | Student   |     |     |     |     |     |    |    |    |       |
    +------------+-----------+-----+-----+-----+-----+-----+----+----+----+-------+

Attendance should keep working even if there are no meetings scheduled
for the current term:

    >>> manager.getLink('Manage').click()
    >>> manager.getLink('Terms').click()
    >>> manager.getLink('New Term').click()
    >>> manager.getControl('Title').value = '2005 Fall 2'
    >>> manager.getControl('Start date').value = '2005-11-01'
    >>> manager.getControl('End date').value = '2005-12-31'
    >>> manager.getControl('Next').click()
    >>> manager.getControl('Saturday').click()
    >>> manager.getControl('Sunday').click()
    >>> manager.getControl('Add term').click()

We will not see any meetings in the table though...

    >>> manager.open('http://localhost/groups/2a/attendance.html')
    >>> print analyze.queryHTML('//div[@id="content-body"]', manager.contents)[0]
    <div id="content-body">
      <form action="http://localhost/groups/2a/attendance.html" method="post">
      ...<div>There have been no meetings in the selected term.</div>
      ...
      </form>
    </div>

But we will be able to select the previous term:

    >>> manager.getControl(name='TERM').value = ['2005-fall-1']
    >>> manager.getControl('Update').click()
    >>> printGradebookTable(manager.contents)
    +------------+-----------+----+----+----+----+----+----+----+----+-------+
    | First Name | Last Name | 04 | 05 | 11 | 12 | 18 | 19 | 25 | 26 | Total |
    +------------+-----------+----+----+----+----+----+----+----+----+-------+
    | Frum       | Student   |    |    |    |    |    |    |    |    | 8     |
    | Grum       | Student   |    |    |    |    |    |    |    |    |       |
    +------------+-----------+----+----+----+----+----+----+----+----+-------+
