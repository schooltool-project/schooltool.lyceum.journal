Functional doctest for SchoolTool Journal
=========================================

Let's log in with the manager account:

    >>> from zope.testbrowser.testing import Browser
    >>> from schooltool.lyceum.journal.ftests import printGradebookTable
    >>> manager = Browser()
    >>> manager.addHeader('Authorization', 'Basic manager:schooltool')
    >>> manager.handleErrors = False
    >>> manager.open('http://localhost/')

Add some teachers:

    >>> from schooltool.basicperson.browser.ftests.setup import addPerson
    >>> addPerson('Pete', 'Teacher', username='pete', password='pwd', groups=['teachers'])

And some students:

    >>> addPerson('Frum', 'Student', username='frum', password='pwd', groups=['students'])
    >>> addPerson('Grum', 'Student', username='grum', password='pwd', groups=['students'])

Add a term:

    >>> manager.getLink('Terms').click()
    >>> manager.getLink('New Term').click()
    >>> manager.getControl('Title').value = '2005 Fall 1'
    >>> manager.getControl('Start date').value = '2005-09-01'
    >>> manager.getControl('End date').value = '2005-10-31'
    >>> manager.getControl('Next').click()
    >>> manager.getControl('Saturday').click()
    >>> manager.getControl('Sunday').click()
    >>> manager.getControl('Add term').click()

Timetable schema:

    >>> manager.getLink('School Timetables').click()
    >>> manager.getLink('New Timetable').click()
    >>> manager.getLink('simple weekly timetable schema').click()

    >>> manager.getControl(name='field.period_name_1').value = 'A'
    >>> manager.getControl(name='field.period_start_1').value = '9:00'
    >>> manager.getControl(name='field.period_finish_1').value = '10:00'

    >>> manager.getControl(name='field.period_name_2').value = 'B'
    >>> manager.getControl(name='field.period_start_2').value = '10:30'
    >>> manager.getControl(name='field.period_finish_2').value = '11:30'

    >>> manager.getControl('Create').click()

A section:

    >>> from schooltool.app.browser.ftests.setup import addSection
    >>> from schooltool.app.browser.ftests.setup import addCourse
    >>> addCourse("History")

    >>> addSection("History", title="History (1a)",
    ...            instructors=['Pete'],
    ...            members=['Grum', 'Frum'])

Let's schedule the section:

    >>> manager.getLink('Sections').click()
    >>> manager.getLink(url='sections/1').click()
    >>> manager.getLink('View Timetables').click()
    >>> manager.getLink('Add Timetable').click()
    >>> manager.getControl(name='terms').value = ['2005-fall-1']
    >>> manager.getControl('Add').click()
    >>> manager.getLink('2005-fall-1.default').click()
    >>> manager.getLink('Edit').click()
    >>> manager.getControl(name='Tuesday.A').value = True
    >>> manager.getControl(name='Tuesday.B').value = True
    >>> manager.getControl(name='Wednesday.A').value = True
    >>> manager.getControl('Save').click()

Let's log in with the teacher account:

    >>> teacher = Browser()
    >>> teacher.handleErrors = False
    >>> teacher.open('http://localhost/')
    >>> teacher.getLink('Log In').click()
    >>> teacher.getControl('Username').value = 'pete'
    >>> teacher.getControl('Password').value = 'pwd'
    >>> teacher.getControl('Log in').click()

    >>> teacher.open('http://localhost/persons/frum/calendar/2005-09-06')
    >>> teacher.getLink('Journal').click()
    >>> printGradebookTable(teacher.contents)
    +-----+------------+-----------+---------+----+----+----+----+----+----+----+----+----+----+----+---------+----------+
    | Nr. | First Name | Last Name | 06      | 06 | 07 | 13 | 13 | 14 | 20 | 20 | 21 | 27 | 27 | 28 | Average | Absences |
    +-----+------------+-----------+---------+----+----+----+----+----+----+----+----+----+----+----+---------+----------+
    | 1   | Frum       | Student   | [_____] |    |    |    |    |    |    |    |    |    |    |    |         |          |
    | 2   | Grum       | Student   | [_____] |    |    |    |    |    |    |    |    |    |    |    |         |          |
    +-----+------------+-----------+---------+----+----+----+----+----+----+----+----+----+----+----+---------+----------+

There should be a field for lesson description:

    >>> teacher.getControl(name='field.teacher_description').value = "description for teacher"
    >>> teacher.getControl(name='field.public_description').value = "description for student"
    >>> teacher.getControl('Update').click()

The values should be set:

    >>> teacher.getControl(name='field.teacher_description').value
    'description for teacher'
    >>> teacher.getControl(name='field.public_description').value
    'description for student'

If we select a different day, the text fields will become empty again:

    >>> teacher.getLink('7').click()
    >>> teacher.getControl(name='field.teacher_description').value
    ''
    >>> teacher.getControl(name='field.public_description').value
    ''

If though - if we select the day that has the descriptions it should
be in there again:

    >>> teacher.getLink('6').click()
    >>> teacher.getControl(name='field.teacher_description').value
    'description for teacher'
    >>> teacher.getControl(name='field.public_description').value
    'description for student'

We can edit the public description using calendar views too:

    >>> teacher.open('http://localhost/persons/frum/calendar/2005-09-06')

    >>> teacher.getLink('History', url="edit").click()
    >>> teacher.getControl('Description').value
    'description for student'

    >>> teacher.getControl('Description').value = 'New description for student'
    >>> teacher.getControl('Apply').click()
    >>> teacher.getLink('Journal').click()
    >>> teacher.getControl(name='field.public_description').value
    'New description for student'
